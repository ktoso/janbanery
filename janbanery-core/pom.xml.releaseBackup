<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>pl.project13.janbanery</groupId>
        <artifactId>janbanery</artifactId>
        <version>1.3-SNAPSHOT</version>
    </parent>

    <groupId>pl.project13.janbanery</groupId>
    <artifactId>janbanery-core</artifactId>
    <version>1.3-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>Janbanery - Core</name>
    <description>
        Kanbanery (https://kanbanery.com) is a simple but powerful Agile project management system,
        to be precise it focuses around the idea of Kanban, a somewhat near idea to SCRUM but with less strict rules.

        The heart of each Kanban flow is the Kanban board, IceBox and Archive - there are all easy accessible via this
        API.

        Janbanery wraps around the RESTful API delivered by Kanbanery while adding some more features like mass
        operations
        or filtering of results. In the end, it's very easy and pleasant to implement your own Kanbanery client be it on
        the desktop, mobile (android) or as for example Gradle / SBT script to take full advantage of kanbanery's
        features.
    </description>
    <url>http://www.blog.project13.pl</url>

    <developers>
        <developer>
            <id>ktoso</id>
            <name>Konrad Malawski</name>
            <email>konrad.malawski@java.pl</email>
            <organization>Project13.pl</organization>
            <url>http://blog.project13.pl</url>
        </developer>
    </developers>

    <prerequisites>
        <maven>[2.2.1.)</maven>
    </prerequisites>

    <licenses>
        <license>
            <name>Apache License 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0</url>
        </license>
    </licenses>

    <scm>
        <url>git@github.com/ktoso/janbanery.git</url>
        <connection>scm:git:https://github.com/ktoso/janbanery</connection>
        <developerConnection>scm:git:git@github.com:ktoso/janbanery.git</developerConnection>
    </scm>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    </properties>

    <dependencies>
        <!-- async http client -->
        <dependency>
            <groupId>com.ning</groupId>
            <artifactId>async-http-client</artifactId>
            <version>1.6.3</version>
        </dependency>
        <!-- gson -->
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>${gson.version}</version>
        </dependency>
        <!-- guava -->
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>
        <!-- joda time -->
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${joda-time.version}</version>
        </dependency>

        <!-- Logging -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j-api.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback-classic.version}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>${logback-core.version}</version>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Setting built-in java compiler properties -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <source>${maven.source}</source>
                    <target>${maven.target}</target>
                </configuration>
            </plugin>
            <!-- GPG -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-gpg-plugin</artifactId>
                <executions>
                    <execution>
                        <id>sign-artifacts</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>sign</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>